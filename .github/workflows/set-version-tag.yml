name: Set version tag

permissions:
  contents: write

on:
  workflow_run:
    workflows: ["Test workflow"]
    types:
      - completed

jobs:
  check_if_tag_exists:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install toml package
        run: pip install toml

      - name: Extract version from pyproject.toml and check if tag exists
        id: extract_version_and_check_tag
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          EXISTS=$(git ls-remote --tags origin refs/tags/${VERSION} | wc -l)
          echo "::set-output name=tag_version::$VERSION"
          echo "::set-output name=tag_exists::$EXISTS"
    outputs:
      tag_version: ${{ steps.extract_version_and_check_tag.outputs.tag_version }}
      tag_exists: ${{ steps.extract_version_and_check_tag.outputs.tag_exists }}
          
  set_version_tag:
    needs: check_if_tag_exists
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.check_if_tag_exists.outputs.tag_exists != '1' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create new tag
        run: git tag ${{ env.tag_version }}

      - name: Push new tag
        run: git push origin ${{ env.tag_version }}
