    name: TriggerTest
    
    permissions:
      checks: write
      pull-requests: write
      contents: write
    
    on: # yamllint disable-line rule:truthy
      # Trigger mega-linter at every push. Action will also be visible from Pull Requests to main
      pull_request:
        branches: [master, main]
    
    env: # Comment env block if you do not want to apply fixes
      # Apply linter fixes configuration
      APPLY_FIXES: all # When active, APPLY_FIXES must also be defined as environment variable (in github/workflows/mega-linter.yml or other CI tool)
      APPLY_FIXES_EVENT: pull_request # Decide which event triggers application of fixes in a commit or a PR (pull_request, push, all)
      APPLY_FIXES_MODE: commit # If APPLY_FIXES is used, defines if the fixes are directly committed (commit) or posted in a PR (pull_request)
    
    concurrency:
      group: ${{ github.ref }}-${{ github.workflow }}
      cancel-in-progress: true
    
    jobs:
      build:
        name: TriggerTest
        runs-on: ubuntu-latest
    
        permissions:
          checks: write
          pull-requests: write
          contents: write
    
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
            with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0  # this is important to fetch all branches
      
          - name: Swap first lines
            run: |
              file="./pyrecest/filters/__init__.py"
              total_lines=$(wc -l < "$file")
              nth_line=$(shuf -i 1-10 -n 1)

              # Check if nth line is available
              if [ "$nth_line" -le "$total_lines" ]; then
                  # Fetch the first and nth lines
                  first_line=$(sed -n '1p' "$file")
                  nth_line_content=$(sed -n "${nth_line}p" "$file")

                  # Replace the first line with the nth line and nth line with the first line
                  sed -i "1s/.*/${nth_line_content}/" "$file"
                  sed -i "${nth_line}s/.*/${first_line}/" "$file"
              else
                  echo "nth line exceeds the total number of lines in the file."
              fi
      
          - name: Commit and push
            run: |
              git config user.name "GitHub Actions"
              git config user.email "actions@github.com"
              git add ./pyrecest/filters/__init__.py
              git commit -m "Automatically swap first lines in __init__.py"
              git push origin ${{ github.head_ref }}
    
          - name: Trigger try
            run: |
              curl -X POST \
              -H "Authorization: Bearer ${{   secrets.PAT }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/tests.yml/dispatches" \
              -d '{"ref":"${{ github.head_ref }}"}'