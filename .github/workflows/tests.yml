---
name: Test workflow

permissions: read-all

on: # yamllint disable-line rule:truthy
  push:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          export CUDA_VISIBLE_DEVICES=""
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --extras healpy_support --extras pytorch_support 

      - name: List files and check Python and package versions
        run: |
          poetry env use python
          ls -al
          python -c "import torch; print(torch.version.cuda)"
          pip3 install --upgrade --force-reinstall torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          python -c "import torch; print(torch.version.cuda)"
          python -c 'import sys; print(sys.version_info[:])'
          python -m pip freeze

      - name: Run tests with numpy backend
        run: |
          #poetry env use python
          #export PYRECEST_BACKEND=numpy
          #poetry run python -m pytest --rootdir . -v --strict-config --junitxml=junit_test_results_numpy.xml ./pyrecest
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Run tests with pytorch backend
        if: always()
        run: |
          poetry env use python
          export PYRECEST_BACKEND=pytorch
          poetry run python -m pytest --rootdir . -v --strict-config --junitxml=junit_test_results_pytorch.xml ./pyrecest
        env:
          PYTHONPATH: ${{ github.workspace }}

      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            junit_test_results_numpy.xml
            junit_test_results_pytorch.xml
